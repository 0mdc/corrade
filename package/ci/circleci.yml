version: 2.1

orbs:
  codecov: codecov/codecov@1.1.1

executors:
  ubuntu-16_04:
    docker:
    - image: ubuntu:xenial-20201014
  emscripten-1_39_1:
    docker:
    - image: emscripten/emsdk:1.39.1-upstream
  python-3_6:
    docker:
    - image: python:3.6.12

commands:
  install-base:
    steps:
    - run:
        name: Update apt and install base tools
        # - Curl needed by codecov, wget by us
        # - git soft-required by the `checkout` step, but needed by us to
        #   generate version info
        command: |
          apt update
          apt install -y ninja-build lcov wget curl git

  install-gcc-4_8:
    steps:
    - run:
        name: Install GCC 4.8
        command: |
          apt install -y g++-4.8
          echo 'export CXX=g++-4.8' >> $BASH_ENV

  install-clang-3_8:
    steps:
    - run:
        name: Install Clang 3.8
        # https://askubuntu.com/questions/787383/how-to-install-llvm-3-9
        # because the `deb` commands from https://apt.llvm.org don't work
        #
        # The software-properties-common need to be installed in order to have
        # apt-add-repository. Sigh, adding a repository should be a core
        # feature ffs!
        #
        # The apt-transport-https needs to be installed because
        #  E: The method driver /usr/lib/apt/methods/https could not be found.
        #  N: Is the package apt-transport-https installed?
        command: |
          apt install -y software-properties-common apt-transport-https
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
          apt-add-repository "deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-3.9 main"
          apt update
          apt install -y clang-3.8
          echo 'export CXX=clang++-3.8' >> $BASH_ENV

  install-cmake-3_4:
    steps:
    - run:
        name: Install CMake 3.4
        command: |
          mkdir -p $HOME/cmake && cd $HOME/cmake
          wget -nc --no-check-certificate https://cmake.org/files/v3.4/cmake-3.4.3-Linux-x86_64.tar.gz
          tar --strip-components=1 -xzf cmake-3.4.3-Linux-x86_64.tar.gz
          echo 'export PATH=$HOME/cmake/bin:$PATH' >> $BASH_ENV
          source $BASH_ENV && cmake --version | grep 3.4

  make-expected-linux-dirs:
    steps:
    - run:
        name: Create files expected by Utility::Directory tests on Linux
        command: |
          mkdir -p ~/.config/autostart
          mkdir -p ~/.local

  build:
    parameters:
      script:
        type: string
    steps:
    - checkout
    - run:
        name: Build & test
        command: |
          if [ "$BUILD_STATIC" != "ON" ]; then export BUILD_STATIC=OFF; fi
          if [ "$BUILD_DEPRECATED" != "OFF" ]; then export BUILD_DEPRECATED=ON; fi
          ./package/ci/<< parameters.script >>

  lcov:
    steps:
    - run:
        name: Collect code coverage
        command: |
          lcov $LCOV_EXTRA_OPTS --directory . --capture --output-file coverage.info > /dev/null
          lcov $LCOV_EXTRA_OPTS --extract coverage.info "*/src/Corrade/*" --output-file coverage.info > /dev/null
          lcov $LCOV_EXTRA_OPTS --remove coverage.info "*/Test/*" --output-file coverage.info > /dev/null
          lcov $LCOV_EXTRA_OPTS --remove coverage.info "*/build/src/Corrade/*" --output-file coverage.info > /dev/null
    - codecov/upload:
        file: coverage.info

jobs:
  linux:
    executor: ubuntu-16_04
    environment:
      CMAKE_CXX_FLAGS: --coverage
      LCOV_EXTRA_OPTS: --gcov-tool /usr/bin/gcov-4.8
      CONFIGURATION: Debug
    steps:
    - install-base
    - install-gcc-4_8
    - install-cmake-3_4
    - make-expected-linux-dirs
    - build:
        script: unix-desktop.sh
    - lcov

  linux-static:
    executor: ubuntu-16_04
    environment:
      # STUPID yml interprets unquoted ON as a boolean
      # https://stackoverflow.com/questions/53648244/specifying-the-string-value-yes-in-a-yaml-property
      BUILD_STATIC: "ON"
      CMAKE_CXX_FLAGS: --coverage
      LCOV_EXTRA_OPTS: --gcov-tool /usr/bin/gcov-4.8
      CONFIGURATION: Debug
    steps:
    - install-base
    - install-gcc-4_8
    - install-cmake-3_4
    - make-expected-linux-dirs
    - build:
        script: unix-desktop.sh
    - lcov

  linux-nondeprecated:
    executor: ubuntu-16_04
    environment:
      # STUPID yml interprets unquoted OFF as a boolean
      BUILD_DEPRECATED: "OFF"
      CMAKE_CXX_FLAGS: -DCORRADE_NO_ASSERT
      CONFIGURATION: Release
    steps:
    - install-base
    - install-gcc-4_8
    - install-cmake-3_4
    - make-expected-linux-dirs
    - build:
        script: unix-desktop.sh

  linux-sanitizers:
    executor: ubuntu-16_04
    environment:
      CMAKE_CXX_FLAGS: -fsanitize=address
      CONFIGURATION: Debug
    steps:
    - install-base
    - install-clang-3_8
    - install-cmake-3_4
    - make-expected-linux-dirs
    - build:
        script: unix-desktop.sh

  linux-threadsanitizer:
    executor: ubuntu-16_04
    environment:
      CMAKE_CXX_FLAGS: -fsanitize=thread
      CONFIGURATION: Debug
    steps:
    - install-base
    - install-clang-3_8
    - install-cmake-3_4
    - make-expected-linux-dirs
    - build:
        script: unix-desktop.sh

  emscripten:
    executor: emscripten-1_39_1
    steps:
    - install-base
    - build:
        script: emscripten.sh

  # Python preprocessor for magnum-singles, for a lack of better name
  acme:
    executor: python-3_6
    steps:
    - run:
        name: Install coverage and codecov
        command: pip install coverage codecov
    - checkout
    - run:
        name: Run tests and collect coverage
        working_directory: src/acme
        command: coverage run -m unittest
    - run:
        name: Upload coverage
        working_directory: src/acme
        command: codecov

workflows:
  version: 2
  build:
    jobs:
    - linux
    - linux-static
    - linux-nondeprecated
    - linux-sanitizers
    - linux-threadsanitizer
    - emscripten
    - acme
