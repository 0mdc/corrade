# kate: indent-width 2;

language: cpp

matrix:
  include:
  - os: linux
    compiler: gcc
    env: TARGET=desktop
  - os: osx
    compiler: clang
    env: TARGET=desktop
  - os: osx
    env: TARGET=ios-simulator
  - os: osx
    env: TARGET=emscripten

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - kubuntu-backports
    packages:
    - g++-4.7
    - cmake

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/00ec7a9066bb0fec98f3
    on_success: change
    on_failure: always
    on_start: never

install:
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then pip install --user cpp-coveralls; fi

- if [ "$TRAVIS_OS_NAME" == "linux" ]; then export CXX=g++-4.7; fi
# so the directory tests pass (and then some workaround for crazy filesystem issues)
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir -p ~/.config/autostart; fi
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir -p ~/.local; fi
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then export CXXFLAGS=-DTRAVIS_CI_HAS_CRAZY_FILESYSTEM_ON_LINUX; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "ios-simulator" ]; then gem install xcpretty; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "ios-simulator" ]; then brew update && brew upgrade cmake; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "emscripten" ]; then brew install emscripten && export LLVM=/usr/local/opt/emscripten/libexec/llvm/bin && emcc; fi

script:
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./package/ci/travis-desktop.sh; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "desktop" ]; then ./package/ci/travis-desktop.sh; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "ios-simulator" ]; then ./package/ci/travis-ios-simulator.sh; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "emscripten" ]; then ./package/ci/travis-emscripten.sh; fi
# Travis somehow is not able to gather all output, try to force it using this
- sync

after_success:
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then coveralls --gcov /usr/bin/gcov-4.7 -E ".*/Test/.*" --gcov-options '\-lp'; fi
